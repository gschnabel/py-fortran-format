>>> tokens = lexer('4i4')
>>> parser(tokens)
([<I repeat=4 width=4 min_digits=None>], [<I repeat=4 width=4 min_digits=None>])
>>> tokens = lexer('(4i4)')
>>> parser(tokens)
([<I repeat=4 width=4 min_digits=None>], [<I repeat=4 width=4 min_digits=None>])
>>> tokens = lexer('4(i4)')
>>> parser(tokens)
([<I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>], [<I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>])
>>> tokens = lexer('4(4i4)')
>>> parser(tokens)
([<I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>], [<I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>, <I repeat=4 width=4 min_digits=None>])
>>> tokens = lexer('2(i4,3(i4))')
>>> parser(tokens)
([<I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>], [<I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>])
>>> tokens = lexer('()')
>>> parser(tokens)
([], [])
>>> tokens = lexer('3()')
>>> parser(tokens)
([], [])
>>> tokens = lexer('(A1,B1.1,BN,BZ,:,D1.1,E1.1,EN1.1,ES1.1,F1.1,G1.1,I1.1,L1,O1.1,1P,S,/,SP,SS,T1,TL1,TR1,1X,Z1.1),I1.1,\'foo\',"bar",3Hbaz')
>>> parser(tokens)
([<A repeat=None width=1>, <B repeat=None width=1 min_digits=1>, <BN>, <BZ>, <Colon>, <D repeat=None width=1 decimal_places=1>, <E repeat=None width=1 decimal_places=1 exponent=None>, <EN repeat=None width=1 decimal_places=1 exponent=None>, <ES repeat=None width=1 decimal_places=1 exponent=None>, <F repeat=None width=1 decimal_places=1>, <G repeat=None width=1 decimal_places=1 exponent=None>, <I repeat=None width=1 min_digits=1>, <L repeat=None width=1>, <O repeat=None width=1 min_digits=1>, <P scale=1>, <S>, <Slash repeat=None>, <SP>, <SS>, <T num_chars=1>, <TL num_chars=1>, <TR num_chars=1>, <X num_chars=1>, <Z repeat=None width=1 min_digits=1>, <I repeat=None width=1 min_digits=1>, <QuotedString char_string=foo>, <QuotedString char_string=bar>, <QuotedString char_string=baz>], [<A repeat=None width=1>, <B repeat=None width=1 min_digits=1>, <BN>, <BZ>, <Colon>, <D repeat=None width=1 decimal_places=1>, <E repeat=None width=1 decimal_places=1 exponent=None>, <EN repeat=None width=1 decimal_places=1 exponent=None>, <ES repeat=None width=1 decimal_places=1 exponent=None>, <F repeat=None width=1 decimal_places=1>, <G repeat=None width=1 decimal_places=1 exponent=None>, <I repeat=None width=1 min_digits=1>, <L repeat=None width=1>, <O repeat=None width=1 min_digits=1>, <P scale=1>, <S>, <Slash repeat=None>, <SP>, <SS>, <T num_chars=1>, <TL num_chars=1>, <TR num_chars=1>, <X num_chars=1>, <Z repeat=None width=1 min_digits=1>, <I repeat=None width=1 min_digits=1>, <QuotedString char_string=foo>, <QuotedString char_string=bar>, <QuotedString char_string=baz>])
>>> tokens = lexer('3/i4,-2pe3.3e-5')
>>> parser(tokens)
([<Slash repeat=3>, <I repeat=None width=4 min_digits=None>, <P scale=-2>, <E repeat=None width=3 decimal_places=3 exponent=-5>], [<Slash repeat=3>, <I repeat=None width=4 min_digits=None>, <P scale=-2>, <E repeat=None width=3 decimal_places=3 exponent=-5>])
>>> tokens = lexer('i4,i4,(i5,i5),i4')
>>> parser(tokens)
    ([<I repeat=None width=4 min_digits=None>, <I repeat=None width=4 min_digits=None>, <I repeat=None width=5 min_digits=None>, <I repeat=None width=5 min_digits=None>, <I repeat=None width=4 min_digits=None>], [<I repeat=None width=5 min_digits=None>, <I repeat=None width=5 min_digits=None>, <I repeat=None width=4 min_digits=None>])

